public static List<Integer> twoSum(List<Integer> nums, Integer target) {
    List<Integer> indices = new List<Integer>();
    Integer n = 0;
    for (Integer i = 0; i < nums.size(); i++) {
        if (nums[i] < target) {
            n = nums[i];
            // i++;
            if (i == (target - n)) {
                indices.add(n);
                indices.add(i);
            } //else {
            //     i++;
            // }
        }
    }
    return indices;
}

/*
Step 1: Use a Map<Integer, Integer> to store the number as the key and its index as the value.
Step 2: For each number in the list, calculate the complement (target - current number).
Step 3: Check if the complement exists in the Map. If it does, the two numbers that add up to the target have been found, so return their indices.
Step 4: If the complement is not found, add the current number and its index to the Map and continue.
*/