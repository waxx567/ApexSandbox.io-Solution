public String convert15to18DigitId(String fifteenDigit)
{
    // Validate input
    if (fifteenDigit.length() != 15) {
        return '-1';
    }

    // Split the ID into three 5-character segments
    String firstSegment = fifteenDigit.substring(0, 5);
    String middleSegment = fifteenDigit.substring(5, 10); 
    String lastSegment = fifteenDigit.substring(10, 15);

    // Calculate checksums for each segment
    String checksums = '';
    for (String segment : new List<String>{firstSegment, middleSegment, lastSegment}) {
        String binaryString = '';
        for (Integer i = 0; i < segment.length(); i++) {
            Char c = segment.charAt(i);
            binaryString += (Character.isUpperCase(c) ? '1' : '0');
        }
        Integer decimalValue = Integer.valueOf(binaryString, 2);
        checksums += getChecksumCharacter(decimalValue);
    }

    // Combine the original 15 digits with 3 checksum characters
    return fifteenDigit + checksums; 
}

// Helper method to convert the decimal value to a character
private String getChecksumCharacter(Integer decimalValue) 
{
    Integer binaryValue = 0;

    for (Integer i = 0; i < segment.length(); i++) {
        Char c = segment.charAt(i);

        if (Character.isUpperCase(c)) {
            // If the character is uppercase, add the appropriate binary value
            binaryValue += Math.pow(2, i);
        }
    }

    // Map binary value to the corresponding character (A-Z0-9)
    if (binaryValue <= 25) {
        return String.valueOf((char) ('A' + binaryValue));
    }
    else {
        return String.valueOf( - 26);
    }
}
